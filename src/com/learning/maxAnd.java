package com.learning;

/**
 * Created by ndhaka on 4/24/2022 5:06 PM
 */
public class maxAnd {

    // Function for finding maximum AND value.
    public static int maxAND (int arr[], int N) {
        int max = 0; int temp=0;
        // Your code here
        for(int i =0; i<N;i++){
            for(int j=i+1; j<N;j++){
                //    System.out.println("And of "+ arr[i] +" & " + arr[j]+ " is ");
                temp = arr[i] & arr[j];
                // System.out.println(temp);
                //  max = (temp>max)? temp:max;
                if(temp>max)
                    max= temp;
                //   System.out.println("max is here "+ max);
            }
        }
        return max;

    }

    public static void main(String[] args) {
        int[] arr= {772, 644, 843, 832, 389, 444, 194, 490, 277, 894, 67, 123, 896, 519, 426, 976, 509, 381, 16, 997, 510, 216, 424, 166, 876, 695, 304, 425, 543, 444, 370, 712, 378, 826, 96, 914, 46, 713, 924, 281, 55, 18, 707, 399, 837, 134, 997, 516, 430, 902, 980, 448, 794, 395, 502, 516, 303, 31, 453, 290, 580, 822, 99, 349, 954, 915, 242, 713, 927, 189, 187, 768, 168, 78, 125, 975, 919, 546, 21, 567, 640, 232, 828, 645, 257, 451, 220, 214, 606, 847, 727, 626, 105, 808, 348, 32, 847, 903, 487, 461, 836, 614, 352, 848, 11, 527, 773, 396, 211, 869, 643, 801, 700, 724, 418, 971, 552, 925, 927, 955, 403, 602, 528, 289, 312, 178, 832, 546, 459, 833, 581, 920, 438, 664, 92, 168, 315, 918, 666, 30, 736, 107, 598, 177, 323, 7, 24, 683, 181, 30, 349, 928, 500, 96, 158, 529, 2, 680, 344, 757, 27, 282, 681, 854, 974, 825, 871, 220, 885, 159, 44, 888, 55, 779, 726, 679, 6, 472, 786, 803, 80, 517, 574, 914, 172, 990, 667, 192, 259, 192, 402, 108, 665, 486, 543, 822, 220, 792, 526, 289, 397, 987, 96, 95, 153, 452, 329, 232, 958, 757, 723, 708, 368, 766, 938, 883, 293, 327, 319, 34, 138, 333, 268, 885, 59, 131, 659, 305, 532, 253};
//        int[] arr= {772, 644, 843, 832, 389, 444, 194, 490, 277, 894, 67, 123, 896, 519, 426, 976, 509, 381, 16, 997};
//        int N=20;
        int N=230;
                System.out.println(maxAND( arr,N));
    }
}
